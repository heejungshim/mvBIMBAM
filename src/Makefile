
#set impute = yes for mask/imputation feature
IMPUTE ?=yes



SHELL = /bin/sh

CC = g++


ifeq ($(strip $(IMPUTE)), yes)
    CFLAGS += -DIMPUTATION ##-DOUTPUT_MASKED_GENOTYPE##-DPOWER
endif


CFLAGS += -I/user/local/include -L/user/local/lib

CFLAGS += -m64 -Wall #-m64 #-DMCMC # -DIMPUTATION #-DGENOTYPE  

CPPFLAGS = CFLAGS


LIBS += -lm -lgsl -lgslcblas  

OBJS = control.o fpmath.o indiv.o diploid.o haploid.o model.o param.o 

SRCS = fp.cpp control.cpp fpmath.cpp indiv.cpp diploid.cpp haploid.cpp model.cpp param.cpp


all:  fp $(OBJS)

.cpp.o : ; 	$(CC) $(CFLAGS) -c $<  			

fp: fp.o $(OBJS); $(CC) -static $(CFLAGS) $(OBJS) fp.o $(STATICLIBS) $(LIBS) -o bimbam	

# the following dependence generated by make showdep	
fp.o: fp.h fpmath.h control.h model.h diploid.h indiv.h haploid.h param.h
control.o:  control.h fpmath.h model.h diploid.h fp.h indiv.h haploid.h param.h
fpmath.o: fpmath.h
indiv.o: indiv.h fpmath.h
diploid.o: indiv.h fp.h fpmath.h diploid.h model.h haploid.h param.h
haploid.o: haploid.h fp.h fpmath.h indiv.h model.h diploid.h param.h
model.o: model.h diploid.h fp.h fpmath.h indiv.h haploid.h param.h control.h  
param.o: param.h diploid.h fp.h fpmath.h indiv.h model.h haploid.h

showdep: 	
		@$(CC) -MM $(SRCS)
 
clean: 
		rm -f *.o
		
